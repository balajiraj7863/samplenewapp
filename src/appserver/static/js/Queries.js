// Translations for en_US
i18n_register({
	"catalog": {},
	"plural": function (n) {
		return n == 1 ? 0 : 1;
	}
});

var countryDataQuery = {
	"default_country": '|inputlookup countryListLookup'
}

var userDataQuery = {
	"logged_user": '|inputlookup dashboardUserManagement_Lookup where User_Name = "userParam"'
}

var userMgmtQuery = {
	"delete_user": '| inputlookup dashboardUserManagement_Lookup | eval key=_key | WHERE NOT key=\"$delete_key_tok$\" | outputlookup dashboardUserManagement_Lookup',
	"create_user": '| inputlookup dashboardUserManagement_Lookup | append [stats count | eval User_Name=\"$create_user_name_tok$\"  | eval EmailId=\"$create_emailid_tok$\"     | eval Country=\"$create_country_tok$\"           | eval Service_Type=\"$create_service_type_tok$\"    | eval Service_Id=\"$create_service_id_tok$\"    | eval User_Type=\"$create_user_type_tok$\"    | eval User_Id=\"$create_user_id_tok$\" ]        | table User_Name, EmailId, Country, Service_Type, Service_Id, User_Type, User_Id       | outputlookup dashboardUserManagement_Lookup',
	"update_user": '| inputlookup dashboardUserManagement_Lookup | eval key=_key | WHERE key=\"$update_key_tok$\" | eval User_Name=\"$update_user_name_tok$\" | eval EmailId=\"$update_emailId_tok$\"        | eval Country=\"$update_country_tok$\"        | eval Service_Type=\"$update_service_type_tok$\"    | eval Service_Id=\"$update_service_id_tok$\"    | eval User_Type=\"$update_user_type_tok$\"    | eval User_Id=\"$update_user_id_tok$\"       | outputlookup dashboardUserManagement_Lookup append=t',
}

var bizHomeQuery = {
	"biz_rev_banner": 'index IN ("netcool") source IN ("Unbilled_Country_Summary.csv") ServiceType IN ("Postpaid") Country IN ("countryParam") latest=-0d@d earliest=-7d@d  | eval txnDate = strptime(Date, "%Y-%m-%d")| eval Date=strftime(txnDate,"%Y-%m-%d") | eventstats sum(Revenue) as Revenue by Date | where Revenue > 0 | head 1 | rename ServiceType as Service| append [search index IN ("gd_summary") source IN ("Unbilled_Country_Summary") ServiceType IN ("Fixed") Country IN ("countryParam") | eval txnDate = strptime(Date, "%Y-%m-%d") | eventstats max(Date) as Date1 | where Date=Date1 | rename ServiceType as Service | stats sum(Revenue) as Revenue values(Date) as Date by Service | table Service,Revenue] | append [search index IN ("gd_summary") source IN ("OCS_Unbilled_Country_Summary") ServiceType IN ("Prepaid") Country IN ("countryParam") | eval txnDate = strptime(Date, "%Y-%m-%d") | eventstats max(Date) as Date1 | where Date=Date1 | rename ServiceType as Service | stats  sum(Revenue) as Revenue values(Date) as Date by Service |table Service,Revenue]  |table Service,Revenue',
	"biz_sub_banner": 'index= gd_summary source IN ("subscriberTrend_v2", "OCS_SubscriberTrend_Summary") Country IN ("countryParam") ServiceType IN ("serviceTypeParam") | eventstats max(Date) as Date1 | where Date=Date1 | stats sum(totalSub) as totalSub by ServiceType',
	"biz_order_banner": 'index =gd_summary source="Order_Country_summary"  Country IN ("countryParam") ServiceType IN ("serviceTypeParam") earliest=-60m@m| eval current_day = relative_time(now(), "-0d@d") | eval txnDate = strptime(Date, "%m/%d/%Y") | where txnDate = current_day | stats sum(TotalOrders) as TotalOrders by ServiceType,OrderStatus |table ServiceType,TotalOrders,OrderStatus',

	"biz_inc_banner": 'index=gd_summary source=incidentbypriority  earliest=-30m@m Country IN ("countryParam") ServiceType IN ("serviceTypeParam")  Status!=CLOSED AND Status!=RESOLVED | stats count(Urgency) as TotalIncidents by Urgency,ServiceType | eval Priority = if(Urgency !=0,"P".Urgency,null) | table Priority, TotalIncidents,ServiceType',

	"biz_rev_chart": 'index IN ("netcool") source IN ("Unbilled_Country_Summary.csv") ServiceType IN ("Postpaid") Country IN ("countryParam") latest=-0d@d earliest=-14d@d | eval txnDate = strptime(Date, "%Y-%m-%d") | append [search index IN ("gd_summary") source IN ("Unbilled_Country_Summary") ServiceType IN ("Fixed") Country IN ("countryParam") latest=-0d@d earliest=-14d@d | eval txnDate = strptime(Date, "%Y-%m-%d")| stats  sum(Revenue) as Revenue  by txnDate |table txnDate,Revenue] | append [search index IN ("gd_summary") source IN ("OCS_Unbilled_Country_Summary") ServiceType IN ("Prepaid") Country IN ("countryParam") latest=-0d@d earliest=-14d@d | eval txnDate = strptime(Date, "%Y-%m-%d")  | stats  sum(Revenue) as Revenue  by txnDate |table txnDate,Revenue]  | stats sum(Revenue) as TotalRevenue  by txnDate | eval _time = txnDate | timechart span=1d list(TotalRevenue) as TotalRevenue |sort _time | eval txnDate = strftime(_time, "%m/%d/%Y") |table txnDate,TotalRevenue',
	
	"biz_sub_chart": 'index=gd_summary source IN ("subscriberTrend_v2", "OCS_SubscriberTrend_Summary")  Country IN ("countryParam") ServiceType IN ("serviceTypeParam") latest=-0d@d earliest=-14d@d |eval UxiDate = strptime(strftime(_time,"%m/%d/%Y"),"%m/%d/%Y") |stats sum(totalSub) as  totalSub by UxiDate |sort - totalSub |eval _time = UxiDate |timechart span=1d list(totalSub) as totalSub |sort _time|eval txnDate = strftime(_time,"%m/%d/%Y") |fillnull  totalSub |table txnDate, totalSub',
	"biz_order_chart": 'index =gd_summary source="order_Country_summary" Country IN ("countryParam") ServiceType IN ("serviceTypeParam") earliest=-60m@m  | eval current_day = relative_time(now(), "-0d@d") | eval txnDate = strptime(Date, "%m/%d/%Y") | where txnDate = current_day | eventstats sum(TotalOrders) as TotalOrder | eventstats sum(TotalOrders) as ServiceTotalOrders by ServiceType | eval avgData = (ServiceTotalOrders/TotalOrder)*100 |stats   values(ServiceTotalOrders) as ServiceTotalOrders,values(avgData) as avgData by ServiceType',
	"biz_MNP_chart": 'index=gd_summary source=temp_summary earliest=-7d@d latest=-0d@d|timechart span=1d values(data) |join type=left _time [search index=gd_summary source IN ("MNP_summary", "OCS_MNP_Summary")  Country IN ("countryParam") ServiceType IN ("serviceTypeParam") earliest=-1d@d | eval txnDate = strptime(txnDate, "%m/%d/%Y")  |eval  previous_day = relative_time(now(), "-1d@d") | eval Current_week = relative_time(now(), "-14d@d") | where txnDate <= previous_day and Current_week <=txnDate | eval _time = txnDate | timechart span=1d  sum(portin) as portin, sum(portout) as portout  |sort _time] | fillnull portin,portout | eval Date = strftime(_time, "%m/%d/%Y") |table Date,portin,portout'
}

var bizPrepaidQuery = {
	
	"biz_prepaid_rev_banner": 'index=gd_summary source=OCS_Unbilled_Country_Summary ServiceType IN ("serviceTypeParam") Country IN ("countryParam") | eventstats max(Date) as Date1 | where Date=Date1 | stats  sum(Revenue) as Revenue values(Date) as Date by ServiceType',

	"biz_prepaid_topup_banner": 'index=gd_summary source=ocs_topup  Country IN ("countryParam") ServiceType IN ("serviceTypeParam") | eval txnDate=strptime(Date, "%m/%d/%Y"), Date=strftime(txnDate, "%Y-%m-%d") | eventstats max(Date) as Date1 | where Date=Date1  | stats sum(Topup) as Topup by ServiceType',

	"biz_Prepaid_sub_banner": 'index= gd_summary source=OCS_SubscriberTrend_Summary ServiceType IN ("serviceTypeParam") Country IN ("countryParam") | eventstats max(Date) as Date1 | where Date=Date1 |stats sum(totalSub) as totalSub values(Date) as Date by ServiceType',

	"biz_prepaid_order_banner": 'index =gd_summary source="order_Country_summary"  Country IN ("countryParam") ServiceType IN ("serviceTypeParam") earliest=-60m@m  | eval current_day = relative_time(now(), "-0d@d") | eval txnDate = strptime(Date, "%m/%d/%Y") | where txnDate = current_day | stats sum(TotalOrders) as TotalOrders by ServiceType |table ServiceType,TotalOrders',

	"biz_prepaid_inc_banner": 'index=gd_summary source=incidentbypriority  earliest=-30m@m Country IN ("countryParam") ServiceType IN ("serviceTypeParam")  Status!=CLOSED AND Status!=RESOLVED | stats count(Urgency) as TotalIncidents by Urgency,ServiceType | eval Priority = if(Urgency !=0,"P".Urgency,null) | table Priority, TotalIncidents,ServiceType',

	"biz_prepaid_traffic_banner": 'index=gd_summary source="traffic" Country IN ("countryParam") ServiceType IN ("serviceTypeParam")  earliest=-0d@d  | append [search index=gd_summary source=traffic Country IN ("countryParam") ServiceType IN ("serviceTypeParam")  earliest=-7d@d latest=-6d@d  | eval LastWeekValue = if(HOY == \'\',0,HOY)| table HourMin,LastWeekValue,Type ] |join HourMin [search index=gd_summary source="traffic" Country IN ("countryParam") ServiceType IN ("serviceTypeParam")  earliest=-0d@d | eval latestHour =relative_time(now(),"-5m@m"), Hour = strptime(HourMin,"%H:%M") | where Hour < latestHour  | head 1 |table HourMin] | eval value = if(HOY == \'\',0,HOY)  | stats values(HOY) as CurrentValue  values(LastWeekValue) as LastWeekValue by Type | fillnull CurrentValue,LastWeekValue',
	"biz_prepaid_rev_trend_banner": 'index=gd_summary source="OCS_Unbilled_Service_Summary" Country IN ("countryParam") ServiceType IN ("serviceTypeParam") earliest=-10d@d latest=-0d@d | eval txnDate = strptime(Date, "%Y-%m-%d") | eventstats max(txnDate) as CurrentWeek | where CurrentWeek = txnDate | append [search index=gd_summary source=OCS_Unbilled_Service_Summary Country IN ("countryParam") ServiceType IN ("serviceTypeParam") earliest=-17d@d latest=-0d@d  | eval txnDate = strptime(Date, "%Y-%m-%d") | eventstats max(txnDate) as CurrentWeek | eval LastWeek = relative_time(CurrentWeek,"-7d@d") | where LastWeek = txnDate | eval LastWeekValue = if(Revenue == "",0,Revenue) | table usagecatType,LastWeekValue ] | eval value = if(Revenue == "",0,Revenue) | stats sum(Revenue) as CurrentValue sum(LastWeekValue) as LastWeekValue by usagecatType | fillnull LastWeekValue, usagecatType, CurrentValue | table usagecatType, CurrentValue, LastWeekValue',

	"biz_prepaid_rev_chart": 'index=gd_summary source="OCS_Unbilled_Country_Summary" ServiceType IN ("serviceTypeParam") Country IN ("countryParam") latest=-0d@d earliest=-14d@d  | eval txnDate = strptime(Date, "%Y-%m-%d") | stats sum(Revenue) as TotalRevenue  by txnDate |eval _time = txnDate | timechart span=1d list(TotalRevenue) as TotalRevenue |sort _time | eval txnDate = strftime(_time, "%m/%d/%Y") |fillnull TotalRevenue |table txnDate,TotalRevenue',
	"biz_prepaid_priority_chart": 'index=gd_summary source=incidentbypriority earliest=-30m@m Country IN ("countryParam") ServiceType IN ("serviceTypeParam") Status!=CLOSED AND Status!=RESOLVED | stats count(Urgency) as TotalIncidents by Urgency | eval Priority = if(Urgency !=0,"P".Urgency,null) | table Priority, TotalIncidents',
	"biz_prepaid_topupChannel_chart": 'index=gd_summary source="ocs_topup" Country IN ("countryParam") ServiceType IN ("serviceTypeParam") | eval txnDate=strptime(Date, "%m/%d/%Y"), Date=strftime(txnDate, "%Y-%m-%d") | eventstats max(Date) as Date1 | where Date=Date1 | stats sum(Topup) as Topup sum(Revenue) as Revenue by Channel  | fillnull Topup, Revenue | table Channel,Topup, Revenue',
	"biz_prepaid_sub_chart": 'index=gd_summary source=OCS_SubscriberTrend_Summary Country IN ("countryParam") ServiceType IN ("serviceTypeParam") latest=-0d@d earliest=-14d@d |eval UxiDate = strptime(strftime(_time,"%m/%d/%Y"),"%m/%d/%Y") |stats sum(totalSub) as  totalSub by UxiDate |sort - totalSub |eval _time = UxiDate |timechart span=1d list(totalSub) as totalSub |sort _time|eval txnDate = strftime(_time,"%m/%d/%Y") |fillnull  totalSub |table txnDate, totalSub',
	"biz_prepaid_topup_trend_chart": 'index=gd_summary source="ocs_topup"  Country IN ("countryParam") ServiceType IN ("serviceTypeParam")  latest=-0d@d earliest=-14d@d | eval UxiDate = strptime(strftime(_time,"%m/%d/%Y"),"%m/%d/%Y") | stats sum(Topup) as Topup by UxiDate |  sort -Topup | eval _time = UxiDate | timechart span=1d list(Topup) as Topup | sort _time | eval txnDate = strftime(_time,"%m/%d/%Y") | fillnull Topup | table txnDate, Topup',
	"biz_prepaid_MNP_chart": 'index=gd_summary source=temp_summary earliest=-14d@d latest=-0d@d|timechart span=1d values(data) |join type=left _time [search index=gd_summary source=OCS_MNP_Summary Country IN ("countryParam") ServiceType IN ("serviceTypeParam") | eval txnDate = strptime(txnDate, "%m/%d/%Y")  |eval  previous_day = relative_time(now(), "-1d@d") | eval Current_week = relative_time(now(), "-14d@d") | where txnDate <= previous_day and Current_week <=txnDate | eval _time = txnDate | timechart span=1d  sum(portin) as portin, sum(portout) as portout  |sort _time] | fillnull portin,portout | eval Date = strftime(_time, "%m/%d/%Y") |table Date,portin,portout',
}

var bizPostpaidQuery = {
	"biz_postpaid_topup_banner": 'index=gd_summary source=ocs_topup  Country IN ("countryParam") ServiceType IN ("serviceTypeParam") latest=-0d@d earliest=-1d@d | eval txnDate = strptime(Date, "%m/%d/%Y") | eval  previous_day = relative_time(now(), "-1d@d") | where txnDate = previous_day |stats sum(Revenue) as Revenue by ServiceType',

	"biz_postpaid_rev_banner": 'index=netcool source=Billed_Country_Summary.csv  Country IN ("countryParam") ServiceType IN ("serviceTypeParam") | eval UxiData = strptime(Date,"%Y-%m-%d") | eventstats max(UxiData) as txnMonth | where UxiData = txnMonth | eval txnDate = strftime(UxiData, "%m/%d/%Y")| stats sum(Revenue) as TotalRevenue  by  ServiceType,txnDate',

	"biz_postpaid_unrev_banner": 'index IN ("netcool") source IN ("Unbilled_Country_Summary.csv") ServiceType IN ("serviceTypeParam") Country IN ("countryParam") latest=-0d@d earliest=-7d@d  | eval txnDate = strptime(Date, "%Y-%m-%d")| eval Date=strftime(txnDate,"%Y-%m-%d") | eventstats sum(Revenue) as Revenue by Date | where Revenue > 0 | head 1 |table ServiceType, Revenue',
	
	"biz_postpaid_sub_banner": 'index= gd_summary source=subscriberTrend_v2 ServiceType IN ("serviceTypeParam") Country IN ("countryParam") | eventstats max(Date) as Date1 | where Date=Date1 | stats sum(totalSub) as totalSub by ServiceType',

	"biz_postpaid_order_banner": 'index =gd_summary source="order_Country_summary"  Country IN ("countryParam") ServiceType IN ("serviceTypeParam") earliest=-60m@m   | eval current_day = relative_time(now(), "-0d@d") | eval txnDate = strptime(Date, "%m/%d/%Y") | where txnDate = current_day | stats sum(TotalOrders) as TotalOrders by ServiceType,OrderStatus |table ServiceType,TotalOrders,OrderStatus',

	"biz_postpaid_inc_banner": 'index=gd_summary source=incidentbypriority  earliest=-30m@m Country IN ("countryParam") ServiceType IN ("serviceTypeParam")  Status!=CLOSED AND Status!=RESOLVED | stats count(Urgency) as TotalIncidents by Urgency,ServiceType | eval Priority = if(Urgency !=0,"P".Urgency,null) | table Priority, TotalIncidents,ServiceType',

	"biz_postpaid_traffic_banner": 'index=traffic source IN ("rest://Traffic_SMS","rest://Traffic_Voice")  simtype=POSTPAID earliest=-24h | eval latestHour =strftime(now(),"%H") |where hour = latestHour | eval currentweekvalue = if(value == \'\',0,value) |append [search index=traffic source IN ("rest://Traffic_SMS","rest://Traffic_Voice") simtype=POSTPAID earliest=-7d@d latest=-6d@d  | eval latestHour =strftime(now(),"%H") |where hour = latestHour| eval lastweekvalue = if(value == \'\',0,value) | stats list(lastweekvalue) as lastweekvalue by source,hour | table hour,source,lastweekvalue]| stats list(lastweekvalue) as lastweekvalue,list(currentweekvalue) as currentweekvalue by source,hour |fillnull currentweekvalue,lastweekvalue | table hour,source,currentweekvalue,lastweekvalue',

	"biz_postpaid_rev_chart": 'index=netcool source="Unbilled_Country_Summary.csv" ServiceType IN ("serviceTypeParam") Country IN ("countryParam") latest=-0d@d earliest=-14d@d  | eval txnDate = strptime(Date, "%Y-%m-%d") | stats sum(Revenue) as TotalRevenue  by txnDate |eval _time = txnDate | timechart span=1d list(TotalRevenue) as TotalRevenue |sort _time | eval txnDate = strftime(_time, "%m/%d/%Y") |fillnull TotalRevenue |table txnDate,TotalRevenue',
	"biz_postpaid_sub_chart": 'index=gd_summary source=subscriberTrend_v2  Country IN ("countryParam") ServiceType IN ("serviceTypeParam") latest=-0d@d earliest=-14d@d |eval UxiDate = strptime(strftime(_time,"%m/%d/%Y"),"%m/%d/%Y") |stats sum(totalSub) as  totalSub by UxiDate |sort - totalSub |eval _time = UxiDate |timechart span=1d list(totalSub) as totalSub |sort _time|eval txnDate = strftime(_time,"%m/%d/%Y") |fillnull  totalSub |table txnDate, totalSub',
	"biz_postpaid_adj_chart": 'index=gd_summary source=Adjustments_Summary Country IN ("countryParam") ServiceType IN ("serviceTypeParam") | eval UxiData = strptime(Date,"%Y-%m-%d") | eventstats max(UxiData) as txnMonth   | where UxiData = txnMonth | stats sum(SubscriberCount) as SubscriberCount, Sum(AdjustmentAmount) as AdjustmentAmount by AdjustmentReason',
	"biz_postpaid_pay_chart": 'index=gd_summary source="payments_summary_v1"  Country IN("countryParam") ServiceType IN ("serviceTypeParam") latest=-0d@d earliest=-7d@d  | timechart  span=1d  sum(SubscriberCount) as SubscriberCount , sum(TotalAmount) as Amount by PaymentChannel |eval _time = strftime(_time,"%m/%d/%Y")| fillnull  | sort  txnDate',
	"biz_postpaid_pay_channel_chart": 'index=gd_summary  source=payments_summary_v1 Country IN ("countryParam") ServiceType IN ("serviceTypeParam")latest=-0d@d earliest=-7d@d| eval txnDate = strptime(Date, "%Y-%m-%d") | stats sum(TotalAmount) as amount  by  Location_des,txnDate | sort txnDate,amount| eval _time = txnDate  | timechart  span=1d  list(amount) as amount,list(Location_des) as Location_des  |sort _time | eval txnDate = strftime(_time, "%m/%d/%Y") |fillnull amount| table txnDate,Location_des,amount',
	"biz_postpaid_bill_chart": 'index="cerillion" source IN (unbilled_revenue_test_v1) Country IN ("countryParam") ServiceType IN ("serviceTypeParam")  | eval txnDate = strftime(strptime(Date,"%m/%d/%Y"),"%m/%d/%Y") |stats values(ServiceType) as Service,sum(Revenue) as Revenue  by txnDate |   sort -txnDate |  table Service, Revenue | head 1',
	"biz_postpaid_MNP_chart": 'index=gd_summary source=temp_summary earliest=-14d@d latest=-0d@d|timechart span=1d values(data) |join type=left _time [search index=gd_summary source=MNP_summary  Country IN ("countryParam") ServiceType IN ("serviceTypeParam") earliest=-1d@d | eval txnDate = strptime(txnDate, "%m/%d/%Y")  |eval  previous_day = relative_time(now(), "-1d@d") | eval Current_week = relative_time(now(), "-14d@d") | where txnDate <= previous_day and Current_week <=txnDate | eval _time = txnDate | timechart span=1d  sum(portin) as portin, sum(portout) as portout  |sort _time] | fillnull portin,portout | eval Date = strftime(_time, "%m/%d/%Y") |table Date,portin,portout',
	"biz_prepaid_topup_trend_chart": 'index=gd_summary source="ocs_topup"  Country IN ("countryParam") ServiceType IN ("serviceTypeParam")  latest=-0d@d earliest=-14d@d | eval UxiDate = strptime(strftime(_time,"%m/%d/%Y"),"%m/%d/%Y") | stats sum(Topup) as Topup by UxiDate |  sort -Topup | eval _time = UxiDate | timechart span=1d list(Topup) as Topup | sort _time | eval txnDate = strftime(_time,"%m/%d/%Y") | fillnull Topup | table txnDate, Topup',
	"biz_home_topup_by_channel_chart": 'index=gd_summary source="ocs_topup" Country IN ("countryParam") ServiceType IN ("serviceTypeParam")  latest=-0d@d earliest=-1d@d  | table Channel, Revenue, Topup',

	"biz_fixed_unrev_banner": 'index=gd_summary source=unbilled_Country_summary ServiceType IN ("serviceTypeParam") Country IN ("countryParam") | eventstats max(Date) as Date1 | where Date=Date1 | stats  sum(Revenue) as Revenue by ServiceType',
	"biz_fixed_rev_chart": 'index=gd_summary source="unbilled_Country_summary" ServiceType IN ("serviceTypeParam") Country IN ("countryParam") latest=-0d@d earliest=-14d@d  | eval txnDate = strptime(Date, "%Y-%m-%d") | stats sum(Revenue) as TotalRevenue  by txnDate |eval _time = txnDate | timechart span=1d list(TotalRevenue) as TotalRevenue |sort _time | eval txnDate = strftime(_time, "%m/%d/%Y") |fillnull TotalRevenue |table txnDate,TotalRevenue',
	"biz_fixed_rev_banner": 'index=gd_summary source=Billed_Country_Summary  Country IN ("countryParam") ServiceType IN ("serviceTypeParam") | eval UxiData = strptime(Date,"%Y-%m-%d") | eventstats max(UxiData) as txnMonth | where UxiData = txnMonth | eval txnDate = strftime(UxiData, "%m/%d/%Y")| stats sum(Revenue) as TotalRevenue  by  ServiceType,txnDate',
}



var monitorHomeQuery = {

	"mon_home_incSeverity_chart": 'index=gd_summary source=incidentbypriority Status!=CLOSED AND Status!=RESOLVED earliest=-30m@m Country IN ("countryParam") ServiceType IN ("serviceTypeParam")| stats count(Urgency) as TotalIncidents by Urgency | eval Priority = if(Urgency !=0,"P".Urgency,null) | table Priority, TotalIncidents',
	// need to chagne to prepaid
	"mon_home_incSearch_chart": 'index=ocs source=top_issues earliest=-5m | sort-Date | table Date, Comments',
	"mon_home_incMainWindow_chart": 'index=gd_summary  source="maintenancewindow" Country IN ("countryParam") ServiceType IN ("serviceTypeParam") | stats latest(schedule) as schedule,latest(remarks) as remarks by TICKETID | sort - schedule| eval TxnDate = strptime(schedule,  "%Y-%m-%d"),schedule = strftime(TxnDate, "%m/%d/%Y")| table schedule,TICKETID,remarks',
	"mon_home_incAlarm_chart": 'index=ocs source="alarmsummary_v1" Country IN ("countryParam") ServiceType IN ("serviceTypeParam") earliest=-5m | table Critical, Major, Minor',
	"mon_home_incSysAvail_chart": 'index=gd_summary source=BTC_ServerAvailability_Summary earliest=-60m@m latest=-30m@m | stats count(available) as availableCount sum(available) as availableSum by Location | eval availableStatus = (availableSum/availableCount)*100 | eval available = if(availableStatus >= 100,1,0),Country = "Bahamas" | table Country,Location,available',
	"mon_home_incidentModal_chart": 'index=gd_summary (source=incidentstatus OR source=incidentbyqueue OR source=incidentbypriority OR source=incidentbysystem) Status!=CLOSED AND Status!=RESOLVED earliest=-30m@m | eval txnDate = strftime(strptime(createdDate, "%Y/%m/%d"),"%Y/%m/%d") , currentDate = relative_time(now(),"%Y/%m/%d"), Priority = if(Urgency !=0,"P".Urgency,null) | stats values(Impact) as Impact,values(TICKETID) as IncidentID, values(Summary) as Summary, values(createdDate) as ReportedDate, values(Status) as Status, values(Owner) as Owner , values(Urgency) as Urgency, values(txnDate) as txnDate, values(CreatedBy) as CreatedBy, values(SourceSystem) as SourceSystem by TICKETID | eval Severity = "P".Impact |eval TxnDate = strptime(ReportedDate,  "%Y/%m/%d"),ReportedDate = strftime(TxnDate, "%m/%d/%Y")| table IncidentID,ReportedDate,Summary,SourceSystem,CreatedBy,Owner,Severity,Status',
	"mon_home_alarmModal_chart": 'index=ocs source="alarm_summary_details_v1"  earliest=-5m SEVERITY IN ("severityParam") | rename HOST as Host, REMARKS as Comments | table Date, Host, Comments',
	"mon_home_prepaid_incSysAvail_chart": 'index=gd_summary source IN( BTC_ServerAvailability_Summary) earliest=-60m@m latest=-30m@m | eval ServiceType = if(postpaid_Service = "y","PostPaid","")   |stats count(available) as availableCount sum(available) as availableSum by ServiceType |eval availableStatus = (availableSum/availableCount)*100 | eval available = if(availableStatus >= 100,1,0),Country = "Bahamas"| append [ search index=ocs source="overall_availability_v1" earliest=-30m@m Country IN ("countryParam") ServiceType IN ("serviceTypeParam") | eval available = if(Availability >= 100,1,0) | table Country,ServiceType, available]  |dedup Country,ServiceType, available |table Country,ServiceType,available',
}

var monitorPostpaidQuery = {

	"mon_post_siteCentre": 'index=gd_summary source="BTC_ServerAvailability_Summary" earliest=-60m@m latest=-30m@m| where postpaid_Service = "y" AND Location IN ("siteCentreParam") | rename server_name as ServerName, available as Available | eval Health_Check = if(CriticalCount = 0, 1, 0) | table ServerName, Available, Health_Check',
	"mon_post_nodeAvail": 'index=gd_summary source="BTC_ServerAvailability_Summary" earliest=-60m@m latest=-30m@m | rename server_name as ServerName, available as Available | eval Health_Check = if(CriticalCount = 0, 1, 0) | table ServerName, Available, Health_Check',
	"mon_post_nodeDetails": 'index=gd_summary source="BTC_ServerAvailability_Summary" earliest=-60m@m latest=-30m@m | where postpaid_Service = "y" AND server_name = "serverNameParam" | rename server_name as ServerName, server_ip as ServerIP, timestamp as DateTime, available as Available | eval Availability = if(available=="1","Available","Not_Available"), Health_Check = if(CriticalCount = 0, "Good", "Critical") | table DateTime, ServerName, ServerIP, Available, Health_Check',
	"mon_post_Alerts": 'index= gd_summary source=BTC_Alarm_Summary earliest=-60m@m latest=-30m@m |eval Date = strftime(strptime(DateTime, "%Y-%m-%dT%H:%M:%S"),"%Y-%m-%d %H:%M:%S")|where severity = "" +severity +""  AND server_name = "serverNameParam" |eval serviceType = if(postpaid_Service = "y" ,"PostPaid","Not PostPaid")| rename text as summary  |table Date,Country,serviceType,Application,server_name,server_ip,severity,summary',
	"mon_post_cpuLoad": 'index=gd_summary (source=BTC_UnixCPU_Summary OR source=BTC_NTCPU_Summary OR source=BTC_LinuxCPU_Summary) earliest=-60m@m latest=-30m@m| where postpaid_Service = "y" AND server_name = "serverNameParam"|  rename processor as Processor, server_name as ServerName, sourceType as SourceType, timestamp as DateTime, cpubusy as CPU_Busy, cpuid as CPU_ID, idelcpu as CPU_Idle, syscpu as CPU_System, usercpu as CPU_User | fillnull Processor, CPULoad(Percent), CPU_ID, CPU_Busy, CPU_Idle, CPU_System, CPU_User | table DateTime, SourceType, ServerName, Processor, CPULoad(Percent), CPU_ID, CPU_Busy, CPU_Idle, CPU_System, CPU_User',
	"mon_post_diskUsage": 'index=gd_summary (source="BTC_UnixDisk_Summary" OR source="BTC_LinuxDisk_Summary" OR source="BTC_NTDisk_Summary") earliest=-60m@m latest=-30m@m | where postpaid_Service = "y" AND server_name = "serverNameParam"| rename diskname as DiskName, disksize as DiskSize, mountpt as MountPoint, server_name as ServerName, sourceType as SourceType, spaceavail as SpaceAvailable, spaceused as SpaceUsed, timestamp as DateTime, freespace as FreeSpace, instancename as InstanceName, totalsize as TotalSize | fillnull InstanceName, DiskName, DiskSize, TotalSize, MountPoint, FreeSpace, SpaceAvailable, SpaceUsed | table DateTime, SourceType, ServerName, InstanceName, DiskName, DiskSize, TotalSize, MountPoint, FreeSpace, SpaceAvailable, SpaceUsed',
	//"mon_post_processUsage": 'index="gd_summary" source="process_summary" hostname="serverNameParam" | stats latest(service_status) as service_status, latest(host_name) as host_name, latest(service_name) as service_name by info | table service_name, service_status, info, host_name ',
	"mon_post_processUsage":'index=gd_summary source=Process_Summary hostname="serverNameParam" | table hostname, process_desc, process_name',
    "mon_post_errorLog":'index=gd_summary source=Process_Error_log earliest=-30m@m orig_host="serverNameParam" | table orig_host,API_Response_Error, Discount_Failure, Med_Main_Error, SOAP_request_Exception, Session_Failure, Work_Order_Steps',

	"mon_post_interfaceAvail": '|inputlookup sigmaCerillionLookup  | join type=outer queueName [ search index="netcool"  source="sigmaCerillionInterface"  hostName IN (hostParam) "JMS:" earliest=-5d | stats  latest(_time) as _time latest(queueStatus) as queueStatus by field4 | rename field4 as queueName |sort -_time |eval LastOccurence =strftime(_time,"%m/%d/%Y:%H:%M:%S") | table queueName,queueStatus,LastOccurence] | fillnull queueStatus value=Not_Available | fillnull value=- | table hostName,queueName,queueStatus,LastOccurence',
	"mon_post_interfaceQueueStatus": 'index="netcool"  source="sigmaCerillionInterface"  "JMS:" hostName IN (hostParam) queueParam  | stats  latest(_time) as _time latest(queueStatus) as queueStatus by field4 | rename field4 as queueName |sort -_time |eval LastOccurence =strftime(_time,"%m/%d/%Y:%H:%M:%S") | eval hostName="hostParam" | table hostName, queueName,queueStatus,LastOccurence',

	"mon_post_incSeverity_chart": 'index=gd_summary  source=IncidentByPriority Status!=CLOSED AND Status!=RESOLVED Country IN ("countryParam") ServiceType IN ("serviceTypeParam") earliest=-30m@m | stats values(Urgency) as Urgency,values(TotalIncidents) as TotalIncidents by TICKETID | stats sum(TotalIncidents) as TotalIncidents by Urgency | eval Priority = "P".Urgency | table Priority,TotalIncidents',
	//changed below query to top 5 issues
	"mon_post_incSearch_chart": 'index=gd_summary source=BTC_Alarm_Summary earliest=-60m@m latest=-30m@m |eval Date = strftime(strptime(DateTime, "%Y-%m-%dT%H:%M:%S"),"%Y-%m-%d %H:%M:%S")|stats Values(Text) as Text by Date| rename Date as scheduler,Text as remarks|table scheduler,remarks|head 5',
	"mon_post_incMainWindow_chart": 'index=gd_summary  source="maintenancewindow" Country IN ("countryParam") ServiceType IN ("serviceTypeParam") | stats latest(schedule) as schedule,latest(remarks) as remarks by TICKETID |  sort - schedule| eval TxnDate = strptime(schedule,  "%Y-%m-%d"),schedule = strftime(TxnDate, "%m/%d/%Y")| table schedule,TICKETID,remarks',
	"mon_post_incAlarm_chart": 'index=gd_summary source=BTC_Alarm_Summary earliest=-60m@m latest=-30m@m |stats count(severity) as severityCount by severity',
	"mon_post_incSysAvail_chart": 'index=gd_summary source=BTC_ServerAvailability_Summary earliest=-60m@m latest=-30m@m | where postpaid_Service = "y" | stats count(available) as availableCount sum(available) as availableSum by Location | eval availableStatus = (availableSum/availableCount)*100 | eval available = if(availableStatus >= 100,1,0),Country = "Bahamas" | table Country,Location,available',
	"mon_post_alarmModal_chart": 'index=gd_summary source=BTC_Alarm_Summary earliest=-60m@m latest=-30m@m | where postpaid_Service = "y" | eval Date = strftime(strptime(localTimestamp, "%Y-%m-%dT%H:%M:%S"),"%Y-%m-%d %H:%M:%S") | where severity = "severityParam" |eval serviceType = if(postpaid_Service = "y" ,"PostPaid","Not PostPaid") | rename text as summary | table Date,Country,serviceType,Application,ServerName,server_ip,severity,summary',
	"mon_post_incidentModal_chart": 'index=gd_summary Country IN ("countryParam") ServiceType IN ("serviceTypeParam") (source=incidentstatus OR source=incidentbyqueue OR source=incidentbypriority OR source=incidentbysystem) Status!=CLOSED AND Status!=RESOLVED earliest=-30m@m | eval txnDate = strftime(strptime(createdDate, "%Y/%m/%d"),"%Y/%m/%d") , currentDate = relative_time(now(),"%Y/%m/%d"), Priority = if(Urgency !=0,"P".Urgency,null) | stats values(Impact) as Impact,values(TICKETID) as IncidentID, values(Summary) as Summary, values(createdDate) as ReportedDate, values(Status) as Status, values(Owner) as Owner , values(Urgency) as Urgency, values(txnDate) as txnDate, values(CreatedBy) as CreatedBy, values(SourceSystem) as SourceSystem by TICKETID | eval Severity = "P".Impact | table IncidentID,ReportedDate,Summary,SourceSystem,CreatedBy,Owner,Severity,Status',
}

var OperationsOrderFlowQuery = {

	"consolidated_order_flow": 'index="gd_summary" source IN(sourceparam)  Flow_Type="WorkOrder_Flow"  earliest=-60m@m latest=-30m@m Country IN ("countryParam") ServiceType IN ("serviceTypeParam") profileParem  | stats latest(TotalOrders) as TotalOrders  by Status,CodeDescription',
	"consolidated_mnp_flow": 'index="gd_summary" source IN(sourceparam) Flow_Type="MNP_Portout" earliest=-60m@m latest=-30m@m Country IN ("countryParam") ServiceType IN ("serviceTypeParam")  profileParem  | stats latest(TotalOrders) as TotalOrders  by Status,CodeDescription',

	"model_work_orders": 'index=cerillion  source=work_order_test_v1 earliest=-60m@m latest=-30m@m Code_Des IN ("sysname")  STATUS_CD IN("sysstatus") |join  WO_NO [search index="cerillion" source = work_order_test_v1 earliest=-60m@m latest=-30m@m innerParem ]| stats Latest(ACCOUNT_NO) as AccountNo ,Latest(STATUS_CD) as StatusCode ,Latest(Date) as CreatedDate ,Latest(ACTUAL_COMPLETE_DT) as ActualCompletedDate ,Latest(PROFILE_DES) as ProfileDescription ,Latest(Tariff_Dec) as PlanName by WO_NO |rename WO_NO as WorkOrderNo | table WorkOrderNo, AccountNo, StatusCode, CreatedDate, ActualCompletedDate, ProfileDescription,PlanName',
	"model_work_orders_steps": 'index=cerillion source="workorder_steps_test_v1" earliest=-60m@m latest=-30m@m Code_Des IN ("sysname")  Status_CD IN("sysstatus")   |join  WO_NO [search index="cerillion"  source = work_order_test_v1 earliest=-60m@m latest=-30m@m innerParem ]| stats latest(ACTIVATE_DT) as ActivatedDate ,latest(CLEAR_DT) as ClearedDate ,latest(SEQ_NO) as SequenceNo ,latest(Status_CD) as StatusCode ,latest(STEP_DEF_CODE) as StepDefinitionCode ,latest(Code_Des) as CodeDescription,latest(CLEAR_USER) as ClearUser by WO_NO |rename WO_NO as WorkOrderNo |  table WorkOrderNo, ActivatedDate, ClearedDate, StatusCode, SequenceNo, StepDefinitionCode, CodeDescription, ClearUser',
	"model_mml_commands": 'index=cerillion  source=workorder_mml_test_v1 earliest=-60m@m latest=-30m@m Code_Des IN ("sysname")  Status_CD IN("sysstatus")   |join  WO_NO [search index="cerillion"  source = work_order_test_v1 earliest=-60m@m latest=-30m@m innerParem ] | stats Latest(START_DT) as StartDate ,Latest(MML_COMMAND_UID) as MMLCommandUID ,Latest(EQUIP_UID) as EquipmentUID ,Latest(Status_CD) as StatusCode ,Latest(NETWORK_DESC) as NetwotrkDescription ,Latest(TARIFF_DES) as PlanName,Latest(MML_COMMAND) as MMLCommand,Latest(OPERATION_CD) as OperationCode,Latest(RESPONSE_FROM_SWITCH) as ResponseFromSwitch  by WO_NO |rename WO_NO as WorkOrderNo | table WorkOrderNo, StartDate, MMLCommandUID, EquipmentUID, StatusCode, NetwotrkDescription, PlanName, MMLCommand,ResponseFromSwitch, OperationCode',

	"model_sigma_orders": 'index=sigma  source=sigma_workorders_test_v3  Code_Des IN("sysname")  Status_CD IN("sysstatus") |join type=inner SUB_ID [search index="sigma" source IN ("sigma_sub_orders_test_v3") | eval EXT_PROV_ID=replace(EXTERNAL_KEY,"(\\w+)_","") |join type=inner EXT_PROV_ID [search index="cerillion"  source = "workorder_mml_test_v1" earliest=-60m@m latest=-30m@m | join WO_NO [search index="cerillion"  source = work_order_test_v1 earliest=-60m@m latest=-30m@m innerParem ] |stats Latest(data) by WO_NO,EXT_PROV_ID |table EXT_PROV_ID] | stats Latest(data) by SUB_ID]| stats latest(EXTERNAL_KEY) as ExternalKey ,latest(CREATED_DTM) as CreatedDateTime ,latest(CREATED_BY) as CreatedBy ,latest(Message) as Message ,latest(Status_CD) as StatusCode by SUB_ID |rename SUB_ID as SubOrderID | table SubOrderID, ExternalKey, CreatedDateTime, CreatedBy, Message, StatusCode',

	"model_sigma_sub_orders": 'index=sigma  source=sigma_sub_orders_test_v3  Code_Des IN("sysname")  Status_CD IN("sysstatus") | join type=inner SUB_ID [search index="sigma" source IN ("sigma_sub_orders_test_v3") | eval EXT_PROV_ID=replace(EXTERNAL_KEY,"(\\w+)_","") |join type=inner EXT_PROV_ID [search index="cerillion"  source = "workorder_mml_test_v1" earliest=-60m@m latest=-30m@m | join WO_NO [search index="cerillion"  source = work_order_test_v1 earliest=-60m@m latest=-30m@m innerParem ] |stats Latest(data) by WO_NO,EXT_PROV_ID |table EXT_PROV_ID] | stats Latest(data) by SUB_ID] | stats latest(SUB_ORDR_ID) as SUB_ORDR_ID ,latest(ORDR_STATUS_ID) as OrderStatusID ,latest(ORDR_TYP) as OrderType ,latest(Status_CD) as StatusCode ,latest(Message) as Message ,latest(ORDR_SRC_NM) as OrderSRCNumber,latest(EXTERNAL_KEY) as ExternalKey,latest(CREATED_DTM) as CreatedDateTime,latest(CREATED_BY) as CreatedBy,latest(SuborderKey) as SuborderKey,latest(HAS_IMPACT) as HasImpact,latest(MODIFIED_DTM) as ModifiedDate,latest(MODIFIED_BY) as ModifiedBy,latest(ORDR_PREVIOUS_STATUS_ID) as OrderPreviousStatusId by SUB_ID | table SUB_ORDR_ID, SUB_ID, OrderStatusID, OrderType, StatusCode, Message, OrderSRCNumber, ExternalKey, CreatedDateTime, CreatedBy, SuborderKey, HasImpact, modifiedDate, ModifiedBy, OrderPreviousStatusId',

}
var monitorPrepaidQuery = {
	"mon_pre_siteCentre": 'index=gd_summary (source=systemEvents OR source=SystemAvailability)  earliest=-30m@m | eval Date = strftime(strptime(timestamp, "%Y-%m-%dT%H:%M:%S"),"%Y-%m-%d %H:%M:%S") | eval server_name=coalesce(servers,hostName) | rex mode=sed field=server_name "s/Primary://g" | rex mode=sed field=server_name "s/\:.*$//" | lookup hostList_Lookup server_name |  where IP_Supported = "y" AND postpaid_Service = "y" AND Location= "siteCentreParam"  | stats latest(server_ip) as server_ip,latest(available) as available,latest(severity) as severity,latest(Country) as Country,latest(Application) as Application, latest(server_group) as server_group,latest(Date) as DateTime by server_name | eval Health_Check = if(severity!="", 1, 0) | table Application, server_name, available, Health_Check',
	"mon_pre_nodeAvail": 'index=ocs source=healthchecksummary_v1 | lookup Country_Service_Lookup Country, ServiceCD, sourcetype | table HostGroup, Host, HealthCheckStatus, BackupCheckStatus',
	"mon_pre_nodeDetails": 'index=ocs source="healthcheck_host_v1" Host="serverNameParam"  earliest=-30m@m  | table Date, Host, Param, Value, Status',
	// "mon_post_Alerts": 'index= gd_summary source= systemEvents earliest=-60m@m |eval Date = strftime(strptime(localTimestamp, "%Y-%m-%dT%H:%M:%S"),"%Y-%m-%d %H:%M:%S")|where severity = "" +severity +"" |rex mode=sed field=servers "s/Primary://g" | rex mode=sed field=servers "s/\:.*$//" |stats Latest(severity) as severity Latest(Date) as Date Latest(summery) as summary by servers | rename servers as server_name  | lookup hostList_Lookup server_name  | where server_name = "serverNameParam" |eval serviceType = if(postpaid_Service = "y" ,"PostPaid","Not PostPaid") |table Date,Country,serviceType,Application,server_name,server_ip,severity,summary',
	// "mon_post_cpuLoad": 'index=gd_summary (source=linuxsigmacerillion OR source=WindowsCERILLION) earliest=-60m@m | eval server_name=coalesce(systemName,serverName) | rex mode=sed field=server_name "s/Primary://g" | rex mode=sed field=server_name "s/\:.*$//" | lookup hostList_Lookup server_name |  where IP_Supported = "y" AND postpaid_Service = "y" AND server_name = "serverNameParam" |eval Date = strftime(strptime(timestamp, "%Y-%m-%dT%H:%M:%S"),"%Y-%m-%d %H:%M:%S") | stats values(Country) as Country, latest(Date) as DateTime,latest(CPUID) as CPUID,latest(UserCPU(Percent)) as UserCPU(Percent),latest(UserNiceCPU(Percent)) as UserNiceCPU(Percent),latest(SystemCPU(Percent)) as SystemCPU(Percent),latest(IdleCPU(Percent)) as IdleCPU(Percent),latest(BusyCPU(Percent)) as BusyCPU(Percent),latest(I/OWait(Percent)) as I/OWait(Percent), latest(UsertoSystemCPU(Percent)) as UsertoSystemCPU(Percent), latest(StealCPU(Percent)) as StealCPU(Percent), latest(processor) as processor,latest(PrivilegedTime(Percent)) as PrivilegedTime(Percent),latest(ProcessorTime(Percent)) as ProcessorTime(Percent),latest(UserTime(Percent)) as UserTime(Percent) ,latest(Application) as Application, latest(server_group) as server_group by server_name,server_ip | fillnull value=- CPUID, UserCPU(Percent), UserNiceCPU(Percent), SystemCPU(Percent), IdleCPU(Percent), BusyCPU(Percent), I/OWait(Percent), UsertoSystemCPU(Percent), StealCPU(Percent), processor, PrivilegedTime(Percent), ProcessorTime(Percent), UserTime(Percent) | table Country, Application, server_group, server_ip, server_name, DateTime, CPUID, UserCPU(Percent), UserNiceCPU(Percent), SystemCPU(Percent), IdleCPU(Percent), BusyCPU(Percent), I/OWait(Percent), UsertoSystemCPU(Percent), StealCPU(Percent), processor, PrivilegedTime(Percent), ProcessorTime(Percent), UserTime(Percent)',
	// "mon_post_diskUsage": 'index=gd_summary (source="windowsdisk1" OR source="windowsdisk2" OR source="linuxdisk1" OR source="linuxdisk2") earliest=-60m@m | rename systemName as server_name | rex mode=sed field=server_name "s/Primary://g" | rex mode=sed field=server_name "s/\:.*$//" | lookup hostList_Lookup server_name |  where IP_Supported = "y" AND postpaid_Service = "y" AND server_name = "serverNameParam" |eval Date = strftime(strptime(timestamp, "%Y-%m-%dT%H:%M:%S"),"%Y-%m-%d %H:%M:%S")  | stats values(Country) as Country,latest(size) as size, latest(Date) as DateTime, latest(protocol) as protocol, latest(localPort) as localPort, latest(remotePort) as remotePort, latest(localPortName) as localPortName, latest(state) as state, latest(localHostIPAddress) as localHostIPAddress, latest(localHostName) as localHostName, latest(remoteHostIPAddress) as remoteHostIPAddress, latest(remoteHostName) as remoteHostName, latest(diskName) as diskName,latest(fileSystemType) as fileSystemType,latest(mountPoint) as mountPoint,latest(diskUsed) as diskUsed,latest(diskUsedPercent) as diskUsedPercent,latest(diskFree) as diskFree,latest(diskFreePercent) as diskFreePercent,latest(Application) as Application,latest(server_group) as server_group  by server_ip,server_name| fillnull value=- protocol, localPort, remotePort, localPortName, state, localHostIPAddress, localHostName, remoteHostIPAddress, remoteHostName, diskName, mountPoint, fileSystemType, size, diskUsed, diskUsedPercent, diskFree, diskFreePercent | table Country, Application, server_group, server_ip, server_name, DateTime, protocol, localPort, remotePort, localPortName, state, localHostIPAddress, localHostName, remoteHostIPAddress, remoteHostName, diskName, mountPoint, fileSystemType, size, diskUsed, diskUsedPercent, diskFree, diskFreePercent',
	// "mon_post_processUsage": 'index=gd_summary (source="windowsdisk1" OR source="windowsdisk2" OR source="linuxdisk1" OR source="linuxdisk2") earliest=-60m@m | rename systemName as server_name | rex mode=sed field=server_name "s/Primary://g" | rex mode=sed field=server_name "s/\:.*$//" | lookup hostList_Lookup server_name |  where IP_Supported = "y" AND postpaid_Service = "y" AND server_name = "serverNameParam" |eval Date = strftime(strptime(timestamp, "%Y-%m-%dT%H:%M:%S"),"%Y-%m-%d %H:%M:%S")  | stats values(Country) as Country,latest(size) as size, latest(Date) as DateTime, latest(protocol) as protocol, latest(localPort) as localPort, latest(remotePort) as remotePort, latest(localPortName) as localPortName, latest(state) as state, latest(localHostIPAddress) as localHostIPAddress, latest(localHostName) as localHostName, latest(remoteHostIPAddress) as remoteHostIPAddress, latest(remoteHostName) as remoteHostName, latest(diskName) as diskName,latest(fileSystemType) as fileSystemType,latest(mountPoint) as mountPoint,latest(diskUsed) as diskUsed,latest(diskUsedPercent) as diskUsedPercent,latest(diskFree) as diskFree,latest(diskFreePercent) as diskFreePercent,latest(Application) as Application,latest(server_group) as server_group  by server_ip,server_name| fillnull value=- protocol, localPort, remotePort, localPortName, state, localHostIPAddress, localHostName, remoteHostIPAddress, remoteHostName, diskName, mountPoint, fileSystemType, size, diskUsed, diskUsedPercent, diskFree, diskFreePercent | table Country, Application, server_group, server_ip, server_name, DateTime, protocol, localPort, remotePort, localPortName, state, localHostIPAddress, localHostName, remoteHostIPAddress, remoteHostName, diskName, mountPoint, fileSystemType, size, diskUsed, diskUsedPercent, diskFree, diskFreePercent',
	// "mon_post_interfaceAvail": '|inputlookup sigmaCerillionLookup  | join type=outer queueName [ search index="netcool"  source="sigmaCerillionInterface"  hostName IN (hostParam) "JMS:" earliest=-5d | stats  latest(_time) as _time latest(queueStatus) as queueStatus by field4 | rename field4 as queueName |sort -_time |eval LastOccurence =strftime(_time,"%m/%d/%Y:%H:%M:%S") | table queueName,queueStatus,LastOccurence] | fillnull queueStatus value=Not_Available | fillnull value=- | table hostName,queueName,queueStatus,LastOccurence',
	// "mon_post_interfaceQueueStatus": 'index="netcool"  source="sigmaCerillionInterface"  "JMS:" hostName IN (hostParam) queueParam  | stats  latest(_time) as _time latest(queueStatus) as queueStatus by field4 | rename field4 as queueName |sort -_time |eval LastOccurence =strftime(_time,"%m/%d/%Y:%H:%M:%S") | eval hostName="hostParam" | table hostName, queueName,queueStatus,LastOccurence',

	"mon_home_incSearch_chart": 'index=ocs source=top_issues earliest=-5m | sort-Date | table Date, Comments ',
	"mon_home_incSeverity_chart": 'index=gd_summary  source=IncidentByPriority Status!=CLOSED AND Status!=RESOLVED Country IN ("countryParam") ServiceType IN ("serviceTypeParam") earliest=-30m@m | stats values(Urgency) as Urgency,values(TotalIncidents) as TotalIncidents by TICKETID | stats sum(TotalIncidents) as TotalIncidents by Urgency | eval Priority = "P".Urgency | table Priority,TotalIncidents',
	"mon_home_incMainWindow_chart": 'index=ocs source=maintance_window_v1 earliest=-30m@m | sort-schedule  | table schedule,TICKETID,remarks',
	"mon_home_incAlarm_chart": 'index=ocs source="alarmsummary_v1" Country IN ("countryParam") ServiceType IN ("serviceTypeParam") earliest=-5m | table Critical, Major, Minor',
	"mon_home_incSysAvail_chart": 'index=ocs source=site_availability_site_v1 Country IN ("countryParam") ServiceType IN ("serviceTypeParam") earliest=-30m@m | rename NP as "NewProvidence", CC as "Curacao", GB as "GrandBahamas" | table Country, NewProvidence, Curacao, GrandBahamas',
	"mon_home_incidentModal_chart": 'index=gd_summary  source IN(incidentbyqueue,incidentbypriority,incidentbysystem) Country IN ("countryParam") ServiceType IN ("serviceTypeParam")  Status!=CLOSED AND Status!=RESOLVED earliest=-30m@m | eval txnDate = strftime(strptime(createdDate, "%Y/%m/%d"),"%Y/%m/%d") , currentDate = relative_time(now(),"%Y/%m/%d"), Priority = if(Urgency !=0,"P".Urgency,null) | stats values(Impact) as Impact,values(TICKETID) as IncidentID, values(Summary) as Summary, values(createdDate) as ReportedDate, values(Status) as Status, values(Owner) as Owner , values(Urgency) as Urgency, values(txnDate) as txnDate, values(CreatedBy) as CreatedBy, values(SourceSystem) as SourceSystem by TICKETID | eval Severity = "P".Impact |eval TxnDate = strptime(ReportedDate,  "%Y/%m/%d"),ReportedDate = strftime(TxnDate, "%m/%d/%Y")| table IncidentID,ReportedDate,Summary,SourceSystem,CreatedBy,Owner,Severity,Status',
	"mon_home_alarmModal_chart": 'index=ocs source="alarm_summary_details_v1"  earliest=-5m SEVERITY IN ("severityParam") | rename HOST as Host, REMARKS as Comments | table Date, Host, Comments'
	
}
var monitoring_prepiad_site_monitoring = {
	"healthcheck": 'index=ocs source="healthcheck_host_failure" Site IN ("siteparam") Host="modalparam" earliest=-30m@m | eval temp = split(_raw, "CommandOutput=") | eval Command_Output=mvindex(temp,1) | table Date, Host, Param, Value, Status, Command_Output',

	"displayname": 'index=ocs source="healthcheck_host_v1" Site IN ("siteparam") DisplayName="modalparam" earliest=-30m@m | eval Param = if(Param ="CPUStats","Percentage of CPU idle time",Param) |  table Date,Host, Param, Value, Status',

	"backupcheck": 'index=ocs source="backup_check_v1" Site IN ("siteparam") DisplayName="modalparam" earliest =-1d@d | table  Status, Date, DisplayName, Host|  head 1',

	"hostgroup": 'index=ocs source="healthcheck_hostgroup_v1" Site IN ("siteparam") HostGroup="hostgrpparam" earliest=-30m@m | eval Param = if(Param ="CPUStats","Percentage of CPU idle time",Param) | table Date, Host, Param, Value, Status',

	"healthCheckSummary": 'index=ocs source=healthchecksummary_v1 Site IN ("siteparam")  earliest=-30m@m | lookup Country_Service_Lookup Country, ServiceCD, sourcetype |eval HealthCheck=HealthCheckStatus,BackupCheck= BackupCheckStatus|  table HostGroup, DisplayName, HealthCheck, BackupCheck| sort HostGroup'

}
var modelExcelDownloadQueryMapping={
           
	"all_ordertype":  'Country IN ("countryParam") ServiceType IN ("serviceTypeParam") PROFILE_CODE = "profile_param"|eval uxiDate = strptime(Date,"%m/%d/%Y"),fifth_day = relative_time(now(),"-5d@d") |where uxiDate > fifth_day |lookup OrderClassification_Lookup PROFILE_CODE | where Flow_Type = "flowtype" | stats Latest(STATUS_CD) as Status_CD by WO_NO | append [ search index="cerillion" source = work_order_test_v1 earliest=-60m@m latest=-30m@m Country IN ("countryParam") ServiceType IN ("serviceTypeParam") PROFILE_CODE = "profile_param" NOT  STATUS_CD IN("CO","RE")  |eval uxiDate = strptime(Date,"%m/%d/%Y"),fifth_day = relative_time(now(),"-5d@d") |where uxiDate <= fifth_day |lookup OrderClassification_Lookup PROFILE_CODE | where Flow_Type = "flowtype" | stats Latest(STATUS_CD) as Status_CD by WO_NO | table WO_NO] |dedup WO_NO |table WO_NO',
	
	"completed":'Country IN ("countryParam") ServiceType IN ("serviceTypeParam") PROFILE_CODE = "profile_param" STATUS_CD IN("CO","RE") |eval uxiDate = strptime(Date,"%m/%d/%Y"),fifth_day = relative_time(now(),"-5d@d") |where uxiDate > fifth_day |lookup OrderClassification_Lookup PROFILE_CODE | where Flow_Type = "flowtype" | stats Latest(STATUS_CD) as Status_CD by WO_NO  |table WO_NO',
	
	"open_orders":'Country IN ("countryParam") ServiceType IN ("serviceTypeParam") PROFILE_CODE = "profile_param" NOT STATUS_CD IN("CO","RE","CA")  |lookup OrderClassification_Lookup PROFILE_CODE | where Flow_Type = "flowtype" | stats Latest(STATUS_CD) as Status_CD by WO_NO  |table WO_NO',
	
	"todays_orders":'Country IN ("countryParam") ServiceType IN ("serviceTypeParam") PROFILE_CODE = "profile_param" |eval uxiDate = strptime(Date,"%m/%d/%Y"),today = relative_time(now(),"@d") |where uxiDate = today |lookup OrderClassification_Lookup PROFILE_CODE | where Flow_Type = "flowparemtype" | stats Latest(STATUS_CD) as Status_CD by WO_NO  |table WO_NO ',
	
	};
	