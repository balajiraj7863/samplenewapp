
[Unbilled_Plan_Summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
cron_schedule = 06 03 * * *
description = unbilledplane_summary
enableSched = 1
disabled = 1
search = index IN(cerillion,ocs) source =unbilled_revenue_test_v1 latest=-0d@d earliest=-1d@d |eval txnDate = strptime(Date,"%Y-%m-%d"),Date = strftime(txnDate,"%Y-%m-%d")|eval _time =txnDate | stats sum(Revenue) as Revenue  by PlanDesc,Country,ServiceType,Date,_time

[Billed_Service_summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 06 03 * * *
description = billed summary
enableSched = 1
disabled = 1
search = index=cerillion source="revenue_test_v1"  |lookup Billes_Revenue_Usage_Category_Lookup UsageCat |eval endDate = strptime(EndDate,"%Y-%m-%d"),currentDate = relative_time(now(),"-1d@d"),txnDate = strptime(Date,"%Y-%m-%d")  |where currentDate = endDate | eval _time= txnDate | stats sum(Revenue) as Revenue,sum(Call_Count) as Call_Count  by Date,Country,ServiceType,NetworkType,_time,Category

[Billed_Plan_Summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 06 03 * * *
description = Billed Plan summary
enableSched = 1
disabled = 1
search = index=cerillion source ="revenue_test_v1" latest=-0d@d earliest=-1d@d  |eval endDate = strptime(EndDate,"%Y-%m-%d"),currentDate = relative_time(now(),"-1d@d"),txnDate = strptime(Date,"%Y-%m-%d") |where currentDate = endDate | eval _time= txnDate | stats sum(Revenue) as Revenue,sum(Call_Count) as Call_Count  by Date,ServiceType,_time,PlanDesc,Country

[Payments_summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 06 03 * * *
description = Payments data
enableSched = 1
disabled = 1
search = index="cerillion"  source="payments_test_v1" latest=-0d@d earliest=-1d@d |eval TxnDate = strptime(Date,"%Y-%m-%d") |eval _time = TxnDate |eval Date = strftime(TxnDate,"%Y-%m-%d") | stats sum(Amount) as TotalAmount count(account_no) as SubscriberCount by Country, ServiceType, Date, PaymentChannel, Location_des,_time

[Revenue_Churn_Summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 06 03 * * *
description = Data for churn
enableSched = 1
disabled = 1
search = index=cerillion source="revenue_churn_test_v1"|eval endDate = strptime(EntryDate,"%Y-%m-%d"),currentDate = relative_time(now(),"-1d@d"),txnDate = strptime(CurrentBillDate,"%Y-%m-%d") |where currentDate = endDate | eval _time= txnDate  | stats sum(revenue) as Revenue,sum(Volume) as subsribercount  by CurrentBillDate,Country,ServiceType,_time

[Revenue_New_Order_Summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 06 03 * * *
description = Data for new order
enableSched = 1
disabled = 1
search = index=cerillion source="revenue_new_order_test_v1" |eval endDate = strptime(EntryDate,"%Y-%m-%d"),currentDate = relative_time(now(),"-1d@d"),txnDate = strptime(Date,"%Y-%m-%d") |where currentDate = endDate  | eval _time= txnDate | stats sum(revenue) as Revenue,sum(Volume) as subsribercount  by Date,Country,ServiceType,_time

[subscriberClassification_v2]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 13 02 * * *
description = subscriberClassification_v2
enableSched = 1
disabled = 1
search = index ="cerillion"  source = subscriber_test_v2  SubscriberStatusDesc = "Active" latest=-0d@d earliest=-1d@d  | eval txnDate = strptime(Date, "%Y-%m-%d") | eval  Date=strftime(txnDate,"%Y-%m-%d")   | eval _time = txnDate |rename SubClassify as subClassification | stats sum(SubscriberCount) as TotalCount by subClassification,Country,ServiceType,_time,Date

[subscriberExitReason_v2]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 13 02 * * *
description = Data for subscriber Exit Reason
enableSched = 1
disabled = 1
search = index =cerillion source = subscriber_test_v2  SubscriberStatusDesc = "Active" latest=-0d@d earliest=-1d@d | eval txnDate = strptime(Date, "%Y-%m-%d")| eval  Date=strftime(txnDate,"%Y-%m-%d")  |lookup Recovery_Reason_Lookup sourcetype,ReasonCode | eval _time = txnDate | stats sum(SubscriberCount) as Totalcount by ReasonCode,ReasonDesc,Country,ServiceType,_time,Date

[subscriberLoyalty_v2]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 13 02 * * *
description = Data for subscriber - postpaid loyalty
enableSched = 1
disabled = 1
search = index =cerillion source = subscriber_test_v2  SubscriberStatusDesc = "Active" latest=-0d@d earliest=-1d@d | eval txnDate = strptime(Date, "%Y-%m-%d") | eval Date=strftime(txnDate,"%Y-%m-%d") | eval UxiCreateDate = strptime(CreateDate, "%m/%d/%Y") |eval _time = txnDate | eval Loyalty = if( UxiCreateDate >= relative_time(now(),"-365d@d"),"< 1yr",if( UxiCreateDate >= relative_time(now(),"-1095d@d"),"1-3yr",if( UxiCreateDate >= relative_time(now(),"-1825d@d"),"3-5yr","> 5yr"))) | stats sum(SubscriberCount) as TotalCount by Loyalty,Country,ServiceType,_time,Date

[subscriberPlanwise_v2]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 13 02 * * *
description = Data for subscriber - postpaid planwise
enableSched = 1
disabled = 1
search = index =cerillion source = subscriber_test_v2  SubscriberStatusDesc = "Active" latest=-0d@d earliest=-1d@d | eval txnDate = strptime(Date, "%Y-%m-%d") | eval Date=strftime(txnDate,"%Y-%m-%d")  | eval _time = txnDate | stats sum(SubscriberCount) as TotalCount by PlanDesc,Country,ServiceType,_time,Date

[Billed_SubClassification_Summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 13 02 * * *
description = Billed_SubClassification_Summary
enableSched = 1
disabled = 1
search = index=cerillion source ="revenue_test_v1" |lookup Subscriber_Type_Lookup AccCategoryCD, sourcetype |eval endDate = strptime(EndDate,"%Y-%m-%d"),currentDate = relative_time(now(),"-1d@d"),txnDate = strptime(Date,"%Y-%m-%d") | eval _time= txnDate |rename Sub_Classify as subClassification |where currentDate = endDate | stats sum(Revenue) as Revenue,sum(Call_Count) as Call_Count  by Date,ServiceType,_time,subClassification,Country

[Unbilled_SubClassification_Summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 13 03 * * *
description = Un-Billed Sub Classification Summary
enableSched = 1
disabled = 1
search = index IN(cerillion,ocs) source="unbilled_revenue_test_v1" latest=-0d@d earliest=-1d@d |lookup Subscriber_Type_Lookup AccCategoryCD, sourcetype |eval txnDate = strptime(Date,"%Y-%m-%d"),Date = strftime(txnDate,"%Y-%m-%d") |eval _time = txnDate |rename Sub_Classify as subClassification |stats sum(Revenue) as Revenue,sum(Call_Count) as Call_Count by Date,Country,ServiceType,subClassification,_time

[Order_Classification_Summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 00,30 * * * *
description = Data for Order for classification
enableSched = 1
disabled = 1
search = index=cerillion source=work_order_test_v1 earliest=-30m@m  | stats count as TotalOrders  by Classification,OrderStatus,Date,Country,ServiceType,_time

[Order_Plane_Summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 00,30 * * * *
description = Data Order Plane
enableSched = 1
disabled = 1
search = index=cerillion source=work_order_test_v1 earliest=-30m@m | stats count as TotalOrders  by Date,Country,ServiceType,Tariff_Dec,OrderStatus,_time

[Order_Status_Summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 00,30 * * * *
description = Data Order Status
enableSched = 1
disabled = 1
search = index=cerillion source=work_order_test_v1 earliest=-30m@m | stats count as TotalOrders  by Date,Country,ServiceType,OrderStatus,_time

[Order_Country_summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 00,30 * * * *
enableSched = 1
disabled = 1
search = index=cerillion source=work_order_test_v1 earliest=-30m@m | stats count as TotalOrders  by Date,OrderStatus,Country,ServiceType,_time

[Billing_Mediation_Summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 13 04 * * *
description = Billing and mediation Data Processing for the Selected country
enableSched = 1
disabled = 1
search = index=cerillion source=rated_test_v1 earliest=-1d@d latest=-0d@d | eval ServiceType =case(FILENAME LIKE "CD%","PostPaid",FILENAME LIKE "XV5_%","PostPaid",FILENAME LIKE "XG5_%","PostPaid",FILENAME LIKE "%","Fixed") | eval txnDate = strftime(_time, "%m/%d/%Y") |stats SUM(PROCESS_COUNT) as TotalProcessCount,SUM(REJECT_COUNT) as TotalRejectCount by txnDate,ServiceType,Country  |eval Rated = TotalProcessCount+ TotalRejectCount  |join type=outer txnDate,ServiceType [search index=mediation  source=mediation_test_v1 earliest=-1d@d latest=-0d@d | eval ServiceType =case(DESTINATION LIKE "%/gsm","PostPaid",DESTINATION LIKE "%/gprs","PostPaid",DESTINATION LIKE "%/tap/in","PostPaid",DESTINATION LIKE "%","Fixed") | eval txnDate = strftime(_time, "%m/%d/%Y")  |stats sum(TOTAL_RECS_OUT) as mediated by txnDate,ServiceType,Country |table txnDate,ServiceType,mediated,Country ]| fillnull mediated,Rated |eval _time = strptime(txnDate,"%m/%d/%Y")| table txnDate,ServiceType,Country,Rated,mediated,_time

[Billed_Country_Summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 46 05 * * *
description = Billed_Country_Summary
enableSched = 1
disabled = 1
search = index=cerillion source ="revenue_test_v1" |eval endDate = strptime(EndDate,"%Y-%m-%d"),currentDate = relative_time(now(),"-1d@d"),txnDate = strptime(Date,"%Y-%m-%d")  | eval _time= txnDate | stats sum(Revenue) as Revenue,sum(Call_Count) as Call_Count  by Date,Country,ServiceType,_time


[Adjustments_Summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 00 05 * * *
description = Adjustments For multiple country
enableSched = 1
disabled = 1
search = index="cerillion"  source=adjustments_test_v1  | eval UxiData = strptime(Date,"%Y-%m-%d") | eventstats max(UxiData) as txnMonth by Country,ServiceType  | stats sum(Subscribercount) as SubscriberCount, Sum(AdjustmentAmount) as AdjustmentAmount by AdjustmentReason,Country,ServiceType,Date



[Traffic]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 04,09,14,19,24,29,34,39,44,49,54,59 * * * *
description = Traffic Data
enableSched = 1
disabled = 1
search = index=ocs source="traffic_test_v1" earliest=-5m@m | lookup Country_Service_Lookup Country, ServiceCD, sourcetype | eval HourMin=strftime(strptime(Date,"%Y-%m-%d %H:%M"), "%H:%M") | eval txnDate = strptime(Date,"%Y-%m-%d"), Date = strftime(txnDate,"%m/%d/%Y"), _time=txnDate | stats values(HOY) as HOY by Type, Date, HourMin, Country, ServiceType, _time

[IncidentByAging]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 05 02 * * *
description = Incident data based on date
enableSched = 1
disabled = 1
search = index="serviceassurance" source="sccd_prod.corp-it.cc" CLASS=INCIDENT latest=-0d@d earliest=-1d@d | eval txnDate = strptime(CREATIONDATE, "%Y-%m-%d"), CreationDate = strftime(txnDate, "%Y/%m/%d") | stats LATEST(CreationDate) as createdDate LATEST(STATUS) as Status by TICKETID,Country,ServiceType | stats count(createdDate) as TotalIncidents by createdDate, Country,TICKETID,ServiceType,Status

[IncidentAvgResTime]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 05 02 * * *
description = Avg ResolutionTime Data
enableSched = 1
disabled = 1
search = index="serviceassurance" source="sccd_prod.corp-it.cc" CLASS=INCIDENT latest=-0d@d earliest=-1d@d | eval txnDate = strptime(CREATIONDATE, "%Y-%m-%d"), CreationDate = strftime(txnDate, "%Y/%m/%d") | stats LATEST(CreationDate) as createdDate LATEST(CHANGEDATE) as ChangeDate Latest(ACTUALSTART) as ActualStart Latest(ACTUALFINISH) as ActualFinish LATEST(CLASSIFICATIONID) as SourceSystem LATEST(STATUS) as Status by TICKETID,Country,ServiceType | stats count as TotalIncidents  by  TICKETID,Country,createdDate,ChangeDate,ActualStart,ActualFinish,SourceSystem,ServiceType, Status

[IncidentByPriority]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 05 02 * * *
description = Incident data based on priority
enableSched = 1
disabled = 1
search = index="serviceassurance" source="sccd_prod.corp-it.cc" CLASS=INCIDENT latest=-0d@d earliest=-1d@d | eval txnDate = strptime(CREATIONDATE, "%Y-%m-%d"), CreationDate = strftime(txnDate, "%Y/%m/%d") | stats LATEST(CreationDate) as createdDate LATEST(URGENCY) as Urgency LATEST(STATUS) as Status by TICKETID,Country,ServiceType | stats count(Urgency) as TotalIncidents by createdDate, Country, Urgency, TICKETID,ServiceType, Status

[IncidentByQueue]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 05 02 * * *
description = Incident data based on queue
enableSched = 1
disabled = 1
search = index="serviceassurance" source="sccd_prod.corp-it.cc" CLASS=INCIDENT latest=-0d@d earliest=-1d@d | eval txnDate = strptime(CREATIONDATE, "%Y-%m-%d"), CreationDate = strftime(txnDate, "%Y/%m/%d") | stats LATEST(CreationDate) as createdDate  LATEST(OWNERGROUP) as OwnerGroup LATEST(DESCRIPTION) as Summary, LATEST(ASSIGNEDOWNERGROUP) as Owner LATEST(CREATEDBY) as CreatedBy LATEST(STATUS) as Status by TICKETID,Country,ServiceType | stats count(createdDate) as TotalIncidents by createdDate, Country,TICKETID,ServiceType, OwnerGroup, Summary, Owner, CreatedBy, Status

[IncidentBySystem]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 05 02 * * *
description = Incident data based on system
enableSched = 1
disabled = 1
search = index="serviceassurance" source="sccd_prod.corp-it.cc" CLASS=INCIDENT latest=-0d@d earliest=-1d@d | eval txnDate = strptime(CREATIONDATE, "%Y-%m-%d"), CreationDate = strftime(txnDate, "%Y/%m/%d") | stats LATEST(CreationDate) as createdDate  LATEST(CLASSIFICATIONID) as SourceSystem LATEST(IMPACT) as Impact LATEST(STATUS) as Status by TICKETID,Country,ServiceType | stats count(SourceSystem) as TotalIncidents by createdDate, Country, SourceSystem, Impact, TICKETID, ServiceType, Status

[IncidentStatus]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 05 02 * * *
description = Incident data based on status
enableSched = 1
disabled = 1
search = index="serviceassurance" source="sccd_prod.corp-it.cc" CLASS=INCIDENT latest=-0d@d earliest=-1d@d | eval txnDate = strptime(CREATIONDATE, "%Y-%m-%d"), CreationDate = strftime(txnDate, "%Y/%m/%d") | stats LATEST(CreationDate) as createdDate LATEST(STATUS) as Status  by TICKETID,Country,ServiceType | stats count(Status) as TotalIncidents by createdDate,Status, Country, TICKETID,ServiceType

[IncidentTrend]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 05 02 * * *
description = Incident data for trend
enableSched = 1
disabled = 1
search = index="serviceassurance" source="sccd_prod.corp-it.cc" CLASS=INCIDENT latest=-0d@d earliest=-1d@d | eval txnDate = strptime(CREATIONDATE, "%Y-%m-%d"), CreationDate = strftime(txnDate, "%Y/%m/%d") | stats LATEST(CreationDate) as createdDate  LATEST(OWNERGROUP) as OwnerGroup LATEST(DESCRIPTION) as Summary, LATEST(ASSIGNEDOWNERGROUP) as Owner LATEST(CREATEDBY) as CreatedBy LATEST(STATUS) as Status by TICKETID,Country,ServiceType | stats count(createdDate) as TotalIncidents by createdDate, Country,TICKETID,ServiceType, OwnerGroup, Summary, Owner, CreatedBy, Status

[MNP_summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 16 08 * * *
description = Data for Port in and Port Out
enableSched = 1
disabled = 1
search = index IN(cerillion,ocs) source=mnp_test_v1 STATUS_CD IN ("SUCCESS","COMPLETED") earliest=-0d@d | eval portin = if(ACTION_CD == "PORTIN",1,if(ACTION_CD == "PORT_IN",TotalCount,0)),portout = if(ACTION_CD == "PORTOUT",1,if(ACTION_CD == "PORT_OUT",TotalCount,0))  |eval txnDate = strptime(RequestDate, "%Y-%m-%d")  |stats sum(portin) as portin,sum(portout) as portout by txnDate,Country,ServiceType |eval txnDate = strftime(txnDate, "%m/%d/%Y") | table txnDate,portin,portout,Country,ServiceType

[MaintenanceWindow]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 25 00 * * *
description = SR data
enableSched = 1
disabled = 1
search = index=serviceassurance  source=sccd_prod.corp-it.cc CLASS=SR latest=-0d@d earliest=-1d@d | eval txnDate = strftime(strptime(CREATIONDATE,"%Y-%m-%d %H:%M:%S.%1N"),"%Y-%m-%d")| stats  LATEST(DESCRIPTION) as remarks,  LATEST(txnDate) as schedule by TICKETID, Country, ServiceType

[OCS_ARPU]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 16 08 * * *
description = ARPU Data
enableSched = 1
disabled = 1
search = index=ocs source="arpu_v1" "typeofpackage=*Small" OR "typeofpackage=*Medium" OR "typeofpackage=*Large" OR "typeofpackage=*500MB" OR "typeofpackage=*1GB" OR "typeofpackage=*2GB" OR "typeofpackage=*6GB" OR "typeofpackage=*15GB" latest=-0d@d earliest=-1d@d | eval txnDate = strptime(Date, "%Y-%m-%d") | eval txnDate = strptime(Date, "%Y-%m-%d")  | eval Date=strftime(txnDate,"%m/%d/%Y") | stats sum(Revenue) as Revenue, sum(usercount) as usercount by TypeOfPackage, Date, Country, ServiceType, _time

[OCS_MobileTestResults]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 16 08 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
disabled = 1
request.ui_dispatch_app = GlobalDashboard_OCS_V1
request.ui_dispatch_view = search
schedule_window = auto
search = index=ocs source=ocs_mobiletestresults latest=-0d@d earliest=-1d@d | lookup Country_Service_Lookup Country, ServiceCD, sourcetype | eval txnDate = strptime(Date, "%Y-%m-%d"), Date = strftime(txnDate,"%m/%d/%Y"), _time=txnDate | stats values(TotalCount) as TotalCount by Date, ResultGroup, Country, ServiceType, _time

[OCS_SubscriberLifeCycle]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 16 08 * * *
description = SubscriberLifeCycle Data
enableSched = 1
disabled = 1
search = index=ocs source="subscriber_life_cycle_v1" latest=-0d@d earliest=-1d@d | eval txnDate = strptime(Date, "%Y-%m-%d") | eval Date=strftime(txnDate,"%Y-%m-%d")  | stats values(thirty_days_count) as ThirtyDaysCount, values(sixty_days_count) as SixtyDaysCount, values(ninety_days_count) as NinetyDaysCount by Date, Country, ServiceType, _time

[OCS_Topup]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 16 08 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = GlobalDashboard_OCS_V1
request.ui_dispatch_view = search
schedule_priority = higher
schedule_window = auto
disabled = 1
search = index=ocs source="topup_test_v1" latest=-0d@d earliest=-1d@d | lookup Country_Service_Lookup Country, ServiceCD, sourcetype | eval txnDate = strptime(Date,"%Y-%m-%d"), Date = strftime(txnDate,"%m/%d/%Y") | stats values(Revenue) as Revenue, sum(Topup) as Topup by Country, Channel, Date, ServiceType, _time

[OCS_Wallet]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 16 08 * * *
description = Wallet data
enableSched = 1
disabled = 1
search = index=ocs source=wallet_revenue_v1 latest=-0d@d earliest=-1d@d | eval txnDate = strptime(Date, "%Y-%m-%d") | eval Date=strftime(txnDate,"%m/%d/%Y") | stats sum(Revenue) as Revenue by Type, Date, AccountType, Country, ServiceType, _time

[OCS_subscriberTrend_v1]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 16 08 * * *
description = OCS_subscriberTrend_v1
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
disabled = 1
request.ui_dispatch_app = GlobalDashboard_OCS_V1
request.ui_dispatch_view = search
search = index=ocs source="subscriber_test_v2"  SubscriberStatusDesc = "Active" latest=-0d@d earliest=-1d@d | eval txnDate = strptime(Date, "%Y-%m-%d") | eval  Date=strftime(txnDate,"%Y-%m-%d") |rename SubscriberStatusDesc as SubscriberStatus | stats sum(SubscriberCount) as SubscriberCount  sum(UsageSubscriberCount) as UsageSubscriberCount by SubscriberStatus, Country, ServiceType, _time, Date

[Unbilled_Country_Summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 16 08 * * *
description = Unbilled_Country_Summary
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
disabled = 1
request.ui_dispatch_app = GlobalDashboard_OCS_V1
request.ui_dispatch_view = search
search = index IN(cerillion,ocs) source IN ("unbilled_revenue_test_v1","topup_test_v1") latest=-0d@d earliest=-1d@d |eval txnDate = strptime(Date,"%Y-%m-%d"),Date = strftime(txnDate,"%Y-%m-%d") |eval _time = txnDate|stats sum(Revenue) as Revenue by Date,Country,ServiceType,_time

[Unbilled_Service_Summary]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 16 08 * * *
description = Unbilled_Service_Summary
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
disabled = 1
request.ui_dispatch_app = GlobalDashboard_OCS_V1
request.ui_dispatch_view = search
search = index IN(cerillion, ocs) source="unbilled_revenue_test_v1" latest=-0d@d earliest=-1d@d |lookup UnbilledServiceLookup Type |eval txnDate = strptime(Date,"%Y-%m-%d"),Date = strftime(txnDate,"%Y-%m-%d") |eval _time = txnDate|stats sum(Revenue) as Revenue,sum(Call_Count) as Call_Count by Date,usagecatType,NetType,Country,ServiceType,_time

[subscriberStatuswise_v2]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 16 08 * * *
description = subscriberStatuswise_v2
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
disabled = 1
request.ui_dispatch_app = GlobalDashboard_OCS_V1
request.ui_dispatch_view = search
search = index IN (cerillion,ocs) source = subscriber_test_v2 latest=-0d@d earliest=-1d@d | eval txnDate = strptime(Date, "%Y-%m-%d")  |eval  Date=strftime(txnDate,"%Y-%m-%d") |rename SubscriberStatusDesc as SubscriberStatus | stats sum(SubscriberCount) as SubscriberCount  by SubscriberStatus,System,Country,ServiceType,_time,Date

[subscriberTrend_v2]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = gd_summary
alert.track = 0
cron_schedule = 16 08 * * *
description = subscriberTrend_v2
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
disabled = 1
request.ui_dispatch_app = GlobalDashboard_OCS_V1
request.ui_dispatch_view = search
search = index IN (cerillion,ocs) source = subscriber_test_v2  SubscriberStatusDesc = "Active" latest=-0d@d earliest=-1d@d | eval txnDate = strptime(Date, "%Y-%m-%d") | eval  Date=strftime(txnDate,"%Y-%m-%d")  | stats sum(SubscriberCount) as totalSub  by Country,ServiceType,_time,Date
